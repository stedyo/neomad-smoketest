{"ast":null,"code":"\"use strict\";\n\nvar _Storage = _interopRequireDefault(require(\"./Storage\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n\nconst uuidv4 = require('./uuid');\n\nlet iidCache = null;\nconst InstallationController = {\n  currentInstallationId()\n  /*: Promise<string>*/\n  {\n    if (typeof iidCache === 'string') {\n      return Promise.resolve(iidCache);\n    }\n\n    const path = _Storage.default.generatePath('installationId');\n\n    return _Storage.default.getItemAsync(path).then(iid => {\n      if (!iid) {\n        iid = uuidv4();\n        return _Storage.default.setItemAsync(path, iid).then(() => {\n          iidCache = iid;\n          return iid;\n        });\n      }\n\n      iidCache = iid;\n      return iid;\n    });\n  },\n\n  _clearCache() {\n    iidCache = null;\n  },\n\n  _setInstallationIdCache(iid\n  /*: string*/\n  ) {\n    iidCache = iid;\n  }\n\n};\nmodule.exports = InstallationController;","map":{"version":3,"sources":["/Users/szd/Dev/ycomms-smoketest-landing-page/node_modules/parse/lib/node/InstallationController.js"],"names":["_Storage","_interopRequireDefault","require","obj","__esModule","default","uuidv4","iidCache","InstallationController","currentInstallationId","Promise","resolve","path","generatePath","getItemAsync","then","iid","setItemAsync","_clearCache","_setInstallationIdCache","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,sBAAsB,CAACC,OAAO,CAAC,WAAD,CAAR,CAArC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AACnC,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AACnCE,IAAAA,OAAO,EAAEF;AAD0B,GAArC;AAGD;AACD;;;;;;;;;;;;AAYA,MAAMG,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAAtB;;AAEA,IAAIK,QAAQ,GAAG,IAAf;AACA,MAAMC,sBAAsB,GAAG;AAC7BC,EAAAA,qBAAqB;AACrB;AACA;AACE,QAAI,OAAOF,QAAP,KAAoB,QAAxB,EAAkC;AAChC,aAAOG,OAAO,CAACC,OAAR,CAAgBJ,QAAhB,CAAP;AACD;;AAED,UAAMK,IAAI,GAAGZ,QAAQ,CAACK,OAAT,CAAiBQ,YAAjB,CAA8B,gBAA9B,CAAb;;AAEA,WAAOb,QAAQ,CAACK,OAAT,CAAiBS,YAAjB,CAA8BF,IAA9B,EAAoCG,IAApC,CAAyCC,GAAG,IAAI;AACrD,UAAI,CAACA,GAAL,EAAU;AACRA,QAAAA,GAAG,GAAGV,MAAM,EAAZ;AACA,eAAON,QAAQ,CAACK,OAAT,CAAiBY,YAAjB,CAA8BL,IAA9B,EAAoCI,GAApC,EAAyCD,IAAzC,CAA8C,MAAM;AACzDR,UAAAA,QAAQ,GAAGS,GAAX;AACA,iBAAOA,GAAP;AACD,SAHM,CAAP;AAID;;AAEDT,MAAAA,QAAQ,GAAGS,GAAX;AACA,aAAOA,GAAP;AACD,KAXM,CAAP;AAYD,GAtB4B;;AAwB7BE,EAAAA,WAAW,GAAG;AACZX,IAAAA,QAAQ,GAAG,IAAX;AACD,GA1B4B;;AA4B7BY,EAAAA,uBAAuB,CAACH;AACxB;AADuB,IAErB;AACAT,IAAAA,QAAQ,GAAGS,GAAX;AACD;;AAhC4B,CAA/B;AAmCAI,MAAM,CAACC,OAAP,GAAiBb,sBAAjB","sourcesContent":["\"use strict\";\n\nvar _Storage = _interopRequireDefault(require(\"./Storage\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n\nconst uuidv4 = require('./uuid');\n\nlet iidCache = null;\nconst InstallationController = {\n  currentInstallationId()\n  /*: Promise<string>*/\n  {\n    if (typeof iidCache === 'string') {\n      return Promise.resolve(iidCache);\n    }\n\n    const path = _Storage.default.generatePath('installationId');\n\n    return _Storage.default.getItemAsync(path).then(iid => {\n      if (!iid) {\n        iid = uuidv4();\n        return _Storage.default.setItemAsync(path, iid).then(() => {\n          iidCache = iid;\n          return iid;\n        });\n      }\n\n      iidCache = iid;\n      return iid;\n    });\n  },\n\n  _clearCache() {\n    iidCache = null;\n  },\n\n  _setInstallationIdCache(iid\n  /*: string*/\n  ) {\n    iidCache = iid;\n  }\n\n};\nmodule.exports = InstallationController;"]},"metadata":{},"sourceType":"script"}