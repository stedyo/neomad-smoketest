{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = unique;\n\nvar _arrayContainsObject = _interopRequireDefault(require(\"./arrayContainsObject\"));\n\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n\nfunction unique\n/*:: <T>*/\n(arr\n/*: Array<T>*/\n)\n/*: Array<T>*/\n{\n  const uniques = [];\n  arr.forEach(value => {\n    if (value instanceof _ParseObject.default) {\n      if (!(0, _arrayContainsObject.default)(uniques, value)) {\n        uniques.push(value);\n      }\n    } else {\n      if (uniques.indexOf(value) < 0) {\n        uniques.push(value);\n      }\n    }\n  });\n  return uniques;\n}","map":{"version":3,"sources":["/Users/szd/Dev/ycomms-smoketest-landing-page/node_modules/parse/lib/node/unique.js"],"names":["Object","defineProperty","exports","value","default","unique","_arrayContainsObject","_interopRequireDefault","require","_ParseObject","obj","__esModule","arr","uniques","forEach","push","indexOf"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,MAAlB;;AAEA,IAAIC,oBAAoB,GAAGC,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAAjD;;AAEA,IAAIC,YAAY,GAAGF,sBAAsB,CAACC,OAAO,CAAC,eAAD,CAAR,CAAzC;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AACnC,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AACnCN,IAAAA,OAAO,EAAEM;AAD0B,GAArC;AAGD;AACD;;;;;;;;;;;;AAYA,SAASL;AACT;AADA,CAECO;AACD;AAHA;AAKA;AACA;AACE,QAAMC,OAAO,GAAG,EAAhB;AACAD,EAAAA,GAAG,CAACE,OAAJ,CAAYX,KAAK,IAAI;AACnB,QAAIA,KAAK,YAAYM,YAAY,CAACL,OAAlC,EAA2C;AACzC,UAAI,CAAC,CAAC,GAAGE,oBAAoB,CAACF,OAAzB,EAAkCS,OAAlC,EAA2CV,KAA3C,CAAL,EAAwD;AACtDU,QAAAA,OAAO,CAACE,IAAR,CAAaZ,KAAb;AACD;AACF,KAJD,MAIO;AACL,UAAIU,OAAO,CAACG,OAAR,CAAgBb,KAAhB,IAAyB,CAA7B,EAAgC;AAC9BU,QAAAA,OAAO,CAACE,IAAR,CAAaZ,KAAb;AACD;AACF;AACF,GAVD;AAWA,SAAOU,OAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = unique;\n\nvar _arrayContainsObject = _interopRequireDefault(require(\"./arrayContainsObject\"));\n\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n\nfunction unique\n/*:: <T>*/\n(arr\n/*: Array<T>*/\n)\n/*: Array<T>*/\n{\n  const uniques = [];\n  arr.forEach(value => {\n    if (value instanceof _ParseObject.default) {\n      if (!(0, _arrayContainsObject.default)(uniques, value)) {\n        uniques.push(value);\n      }\n    } else {\n      if (uniques.indexOf(value) < 0) {\n        uniques.push(value);\n      }\n    }\n  });\n  return uniques;\n}"]},"metadata":{},"sourceType":"script"}