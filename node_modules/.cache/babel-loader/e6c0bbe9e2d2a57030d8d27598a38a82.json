{"ast":null,"code":"\"use strict\";\n\nvar _decode = _interopRequireDefault(require(\"./decode\"));\n\nvar _encode = _interopRequireDefault(require(\"./encode\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _CryptoController = _interopRequireDefault(require(\"./CryptoController\"));\n\nvar _EventuallyQueue = _interopRequireDefault(require(\"./EventuallyQueue\"));\n\nvar _InstallationController = _interopRequireDefault(require(\"./InstallationController\"));\n\nvar ParseOp = _interopRequireWildcard(require(\"./ParseOp\"));\n\nvar _RESTController = _interopRequireDefault(require(\"./RESTController\"));\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * Contains all Parse API classes and functions.\n *\n * @static\n * @global\n * @class\n * @hideconstructor\n */\n\n\nconst Parse = {\n  /**\n   * Call this method first to set up your authentication tokens for Parse.\n   *\n   * @param {string} applicationId Your Parse Application ID.\n   * @param {string} [javaScriptKey] Your Parse JavaScript Key (Not needed for parse-server)\n   * @param {string} [masterKey] Your Parse Master Key. (Node.js only!)\n   * @static\n   */\n  initialize(applicationId\n  /*: string*/\n  , javaScriptKey\n  /*: string*/\n  ) {\n    Parse._initialize(applicationId, javaScriptKey);\n  },\n\n  _initialize(applicationId\n  /*: string*/\n  , javaScriptKey\n  /*: string*/\n  , masterKey\n  /*: string*/\n  ) {\n    _CoreManager.default.set('APPLICATION_ID', applicationId);\n\n    _CoreManager.default.set('JAVASCRIPT_KEY', javaScriptKey);\n\n    _CoreManager.default.set('MASTER_KEY', masterKey);\n\n    _CoreManager.default.set('USE_MASTER_KEY', false);\n  },\n\n  /**\n   * Call this method to set your AsyncStorage engine\n   * Starting Parse@1.11, the ParseSDK do not provide a React AsyncStorage as the ReactNative module\n   * is not provided at a stable path and changes over versions.\n   *\n   * @param {AsyncStorage} storage a react native async storage.\n   * @static\n   */\n  setAsyncStorage(storage\n  /*: any*/\n  ) {\n    _CoreManager.default.setAsyncStorage(storage);\n  },\n\n  /**\n   * Call this method to set your LocalDatastoreStorage engine\n   * If using React-Native use {@link Parse.setAsyncStorage Parse.setAsyncStorage()}\n   *\n   * @param {LocalDatastoreController} controller a data storage.\n   * @static\n   */\n  setLocalDatastoreController(controller\n  /*: any*/\n  ) {\n    _CoreManager.default.setLocalDatastoreController(controller);\n  },\n\n  /**\n   * Returns information regarding the current server's health\n   *\n   * @returns {Promise}\n   * @static\n   */\n  getServerHealth() {\n    return _CoreManager.default.getRESTController().request('GET', 'health');\n  },\n\n  /**\n   * @member {string} Parse.applicationId\n   * @static\n   */\n  set applicationId(value) {\n    _CoreManager.default.set('APPLICATION_ID', value);\n  },\n\n  get applicationId() {\n    return _CoreManager.default.get('APPLICATION_ID');\n  },\n\n  /**\n   * @member {string} Parse.javaScriptKey\n   * @static\n   */\n  set javaScriptKey(value) {\n    _CoreManager.default.set('JAVASCRIPT_KEY', value);\n  },\n\n  get javaScriptKey() {\n    return _CoreManager.default.get('JAVASCRIPT_KEY');\n  },\n\n  /**\n   * @member {string} Parse.masterKey\n   * @static\n   */\n  set masterKey(value) {\n    _CoreManager.default.set('MASTER_KEY', value);\n  },\n\n  get masterKey() {\n    return _CoreManager.default.get('MASTER_KEY');\n  },\n\n  /**\n   * @member {string} Parse.serverURL\n   * @static\n   */\n  set serverURL(value) {\n    _CoreManager.default.set('SERVER_URL', value);\n  },\n\n  get serverURL() {\n    return _CoreManager.default.get('SERVER_URL');\n  },\n\n  /**\n   * @member {string} Parse.serverAuthToken\n   * @static\n   */\n  set serverAuthToken(value) {\n    _CoreManager.default.set('SERVER_AUTH_TOKEN', value);\n  },\n\n  get serverAuthToken() {\n    return _CoreManager.default.get('SERVER_AUTH_TOKEN');\n  },\n\n  /**\n   * @member {string} Parse.serverAuthType\n   * @static\n   */\n  set serverAuthType(value) {\n    _CoreManager.default.set('SERVER_AUTH_TYPE', value);\n  },\n\n  get serverAuthType() {\n    return _CoreManager.default.get('SERVER_AUTH_TYPE');\n  },\n\n  /**\n   * @member {string} Parse.liveQueryServerURL\n   * @static\n   */\n  set liveQueryServerURL(value) {\n    _CoreManager.default.set('LIVEQUERY_SERVER_URL', value);\n  },\n\n  get liveQueryServerURL() {\n    return _CoreManager.default.get('LIVEQUERY_SERVER_URL');\n  },\n\n  /**\n   * @member {string} Parse.encryptedUser\n   * @static\n   */\n  set encryptedUser(value) {\n    _CoreManager.default.set('ENCRYPTED_USER', value);\n  },\n\n  get encryptedUser() {\n    return _CoreManager.default.get('ENCRYPTED_USER');\n  },\n\n  /**\n   * @member {string} Parse.secret\n   * @static\n   */\n  set secret(value) {\n    _CoreManager.default.set('ENCRYPTED_KEY', value);\n  },\n\n  get secret() {\n    return _CoreManager.default.get('ENCRYPTED_KEY');\n  },\n\n  /**\n   * @member {boolean} Parse.idempotency\n   * @static\n   */\n  set idempotency(value) {\n    _CoreManager.default.set('IDEMPOTENCY', value);\n  },\n\n  get idempotency() {\n    return _CoreManager.default.get('IDEMPOTENCY');\n  },\n\n  /**\n   * @member {boolean} Parse.allowCustomObjectId\n   * @static\n   */\n  set allowCustomObjectId(value) {\n    _CoreManager.default.set('ALLOW_CUSTOM_OBJECT_ID', value);\n  },\n\n  get allowCustomObjectId() {\n    return _CoreManager.default.get('ALLOW_CUSTOM_OBJECT_ID');\n  }\n\n};\nParse.ACL = require('./ParseACL').default;\nParse.Analytics = require('./Analytics');\nParse.AnonymousUtils = require('./AnonymousUtils').default;\nParse.Cloud = require('./Cloud');\nParse.CLP = require('./ParseCLP').default;\nParse.CoreManager = require('./CoreManager');\nParse.Config = require('./ParseConfig').default;\nParse.Error = require('./ParseError').default;\nParse.EventuallyQueue = _EventuallyQueue.default;\nParse.FacebookUtils = require('./FacebookUtils').default;\nParse.File = require('./ParseFile').default;\nParse.GeoPoint = require('./ParseGeoPoint').default;\nParse.Polygon = require('./ParsePolygon').default;\nParse.Installation = require('./ParseInstallation').default;\nParse.LocalDatastore = require('./LocalDatastore');\nParse.Object = require('./ParseObject').default;\nParse.Op = {\n  Set: ParseOp.SetOp,\n  Unset: ParseOp.UnsetOp,\n  Increment: ParseOp.IncrementOp,\n  Add: ParseOp.AddOp,\n  Remove: ParseOp.RemoveOp,\n  AddUnique: ParseOp.AddUniqueOp,\n  Relation: ParseOp.RelationOp\n};\nParse.Push = require('./Push');\nParse.Query = require('./ParseQuery').default;\nParse.Relation = require('./ParseRelation').default;\nParse.Role = require('./ParseRole').default;\nParse.Schema = require('./ParseSchema').default;\nParse.Session = require('./ParseSession').default;\nParse.Storage = require('./Storage');\nParse.User = require('./ParseUser').default;\nParse.LiveQuery = require('./ParseLiveQuery').default;\nParse.LiveQueryClient = require('./LiveQueryClient').default;\nParse.IndexedDB = require('./IndexedDBStorageController');\n\nParse._request = function (...args) {\n  return _CoreManager.default.getRESTController().request.apply(null, args);\n};\n\nParse._ajax = function (...args) {\n  return _CoreManager.default.getRESTController().ajax.apply(null, args);\n}; // We attempt to match the signatures of the legacy versions of these methods\n\n\nParse._decode = function (_, value) {\n  return (0, _decode.default)(value);\n};\n\nParse._encode = function (value, _, disallowObjects) {\n  return (0, _encode.default)(value, disallowObjects);\n};\n\nParse._getInstallationId = function () {\n  return _CoreManager.default.getInstallationController().currentInstallationId();\n};\n/**\n * Enable pinning in your application.\n * This must be called after `Parse.initialize` in your application.\n *\n * @param [polling] Allow pinging the server /health endpoint. Default true\n * @param [ms] Milliseconds to ping the server. Default 2000ms\n * @static\n */\n\n\nParse.enableLocalDatastore = function (polling = true, ms\n/*: number*/\n= 2000) {\n  if (!Parse.applicationId) {\n    console.log(\"'enableLocalDataStore' must be called after 'initialize'\");\n    return;\n  }\n\n  if (!Parse.LocalDatastore.isEnabled) {\n    Parse.LocalDatastore.isEnabled = true;\n\n    if (polling) {\n      _EventuallyQueue.default.poll(ms);\n    }\n  }\n};\n/**\n * Flag that indicates whether Local Datastore is enabled.\n *\n * @static\n * @returns {boolean}\n */\n\n\nParse.isLocalDatastoreEnabled = function () {\n  return Parse.LocalDatastore.isEnabled;\n};\n/**\n * Gets all contents from Local Datastore\n *\n * <pre>\n * await Parse.dumpLocalDatastore();\n * </pre>\n *\n * @static\n * @returns {object}\n */\n\n\nParse.dumpLocalDatastore = function () {\n  if (!Parse.LocalDatastore.isEnabled) {\n    console.log('Parse.enableLocalDatastore() must be called first'); // eslint-disable-line no-console\n\n    return Promise.resolve({});\n  } else {\n    return Parse.LocalDatastore._getAllContents();\n  }\n};\n/**\n * Enable the current user encryption.\n * This must be called before login any user.\n *\n * @static\n */\n\n\nParse.enableEncryptedUser = function () {\n  Parse.encryptedUser = true;\n};\n/**\n * Flag that indicates whether Encrypted User is enabled.\n *\n * @static\n * @returns {boolean}\n */\n\n\nParse.isEncryptedUserEnabled = function () {\n  return Parse.encryptedUser;\n};\n\n_CoreManager.default.setCryptoController(_CryptoController.default);\n\n_CoreManager.default.setInstallationController(_InstallationController.default);\n\n_CoreManager.default.setRESTController(_RESTController.default);\n\nParse.initialize = Parse._initialize;\nParse.Cloud = Parse.Cloud || {};\n\nParse.Cloud.useMasterKey = function () {\n  _CoreManager.default.set('USE_MASTER_KEY', true);\n};\n\nParse.Hooks = require('./ParseHooks'); // For legacy requires, of the form `var Parse = require('parse').Parse`\n\nParse.Parse = Parse;\nmodule.exports = Parse;","map":{"version":3,"sources":["/Users/szd/Dev/ycomms-smoketest-landing-page/node_modules/parse/lib/node/Parse.js"],"names":["_decode","_interopRequireDefault","require","_encode","_CoreManager","_CryptoController","_EventuallyQueue","_InstallationController","ParseOp","_interopRequireWildcard","_RESTController","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Parse","initialize","applicationId","javaScriptKey","_initialize","masterKey","setAsyncStorage","storage","setLocalDatastoreController","controller","getServerHealth","getRESTController","request","value","serverURL","serverAuthToken","serverAuthType","liveQueryServerURL","encryptedUser","secret","idempotency","allowCustomObjectId","ACL","Analytics","AnonymousUtils","Cloud","CLP","CoreManager","Config","Error","EventuallyQueue","FacebookUtils","File","GeoPoint","Polygon","Installation","LocalDatastore","Op","Set","SetOp","Unset","UnsetOp","Increment","IncrementOp","Add","AddOp","Remove","RemoveOp","AddUnique","AddUniqueOp","Relation","RelationOp","Push","Query","Role","Schema","Session","Storage","User","LiveQuery","LiveQueryClient","IndexedDB","_request","args","apply","_ajax","ajax","_","disallowObjects","_getInstallationId","getInstallationController","currentInstallationId","enableLocalDatastore","polling","ms","console","log","isEnabled","poll","isLocalDatastoreEnabled","dumpLocalDatastore","Promise","resolve","_getAllContents","enableEncryptedUser","isEncryptedUserEnabled","setCryptoController","setInstallationController","setRESTController","useMasterKey","Hooks","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _decode = _interopRequireDefault(require(\"./decode\"));\n\nvar _encode = _interopRequireDefault(require(\"./encode\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _CryptoController = _interopRequireDefault(require(\"./CryptoController\"));\n\nvar _EventuallyQueue = _interopRequireDefault(require(\"./EventuallyQueue\"));\n\nvar _InstallationController = _interopRequireDefault(require(\"./InstallationController\"));\n\nvar ParseOp = _interopRequireWildcard(require(\"./ParseOp\"));\n\nvar _RESTController = _interopRequireDefault(require(\"./RESTController\"));\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * Contains all Parse API classes and functions.\n *\n * @static\n * @global\n * @class\n * @hideconstructor\n */\n\n\nconst Parse = {\n  /**\n   * Call this method first to set up your authentication tokens for Parse.\n   *\n   * @param {string} applicationId Your Parse Application ID.\n   * @param {string} [javaScriptKey] Your Parse JavaScript Key (Not needed for parse-server)\n   * @param {string} [masterKey] Your Parse Master Key. (Node.js only!)\n   * @static\n   */\n  initialize(applicationId\n  /*: string*/\n  , javaScriptKey\n  /*: string*/\n  ) {\n    Parse._initialize(applicationId, javaScriptKey);\n  },\n\n  _initialize(applicationId\n  /*: string*/\n  , javaScriptKey\n  /*: string*/\n  , masterKey\n  /*: string*/\n  ) {\n    _CoreManager.default.set('APPLICATION_ID', applicationId);\n\n    _CoreManager.default.set('JAVASCRIPT_KEY', javaScriptKey);\n\n    _CoreManager.default.set('MASTER_KEY', masterKey);\n\n    _CoreManager.default.set('USE_MASTER_KEY', false);\n  },\n\n  /**\n   * Call this method to set your AsyncStorage engine\n   * Starting Parse@1.11, the ParseSDK do not provide a React AsyncStorage as the ReactNative module\n   * is not provided at a stable path and changes over versions.\n   *\n   * @param {AsyncStorage} storage a react native async storage.\n   * @static\n   */\n  setAsyncStorage(storage\n  /*: any*/\n  ) {\n    _CoreManager.default.setAsyncStorage(storage);\n  },\n\n  /**\n   * Call this method to set your LocalDatastoreStorage engine\n   * If using React-Native use {@link Parse.setAsyncStorage Parse.setAsyncStorage()}\n   *\n   * @param {LocalDatastoreController} controller a data storage.\n   * @static\n   */\n  setLocalDatastoreController(controller\n  /*: any*/\n  ) {\n    _CoreManager.default.setLocalDatastoreController(controller);\n  },\n\n  /**\n   * Returns information regarding the current server's health\n   *\n   * @returns {Promise}\n   * @static\n   */\n  getServerHealth() {\n    return _CoreManager.default.getRESTController().request('GET', 'health');\n  },\n\n  /**\n   * @member {string} Parse.applicationId\n   * @static\n   */\n  set applicationId(value) {\n    _CoreManager.default.set('APPLICATION_ID', value);\n  },\n\n  get applicationId() {\n    return _CoreManager.default.get('APPLICATION_ID');\n  },\n\n  /**\n   * @member {string} Parse.javaScriptKey\n   * @static\n   */\n  set javaScriptKey(value) {\n    _CoreManager.default.set('JAVASCRIPT_KEY', value);\n  },\n\n  get javaScriptKey() {\n    return _CoreManager.default.get('JAVASCRIPT_KEY');\n  },\n\n  /**\n   * @member {string} Parse.masterKey\n   * @static\n   */\n  set masterKey(value) {\n    _CoreManager.default.set('MASTER_KEY', value);\n  },\n\n  get masterKey() {\n    return _CoreManager.default.get('MASTER_KEY');\n  },\n\n  /**\n   * @member {string} Parse.serverURL\n   * @static\n   */\n  set serverURL(value) {\n    _CoreManager.default.set('SERVER_URL', value);\n  },\n\n  get serverURL() {\n    return _CoreManager.default.get('SERVER_URL');\n  },\n\n  /**\n   * @member {string} Parse.serverAuthToken\n   * @static\n   */\n  set serverAuthToken(value) {\n    _CoreManager.default.set('SERVER_AUTH_TOKEN', value);\n  },\n\n  get serverAuthToken() {\n    return _CoreManager.default.get('SERVER_AUTH_TOKEN');\n  },\n\n  /**\n   * @member {string} Parse.serverAuthType\n   * @static\n   */\n  set serverAuthType(value) {\n    _CoreManager.default.set('SERVER_AUTH_TYPE', value);\n  },\n\n  get serverAuthType() {\n    return _CoreManager.default.get('SERVER_AUTH_TYPE');\n  },\n\n  /**\n   * @member {string} Parse.liveQueryServerURL\n   * @static\n   */\n  set liveQueryServerURL(value) {\n    _CoreManager.default.set('LIVEQUERY_SERVER_URL', value);\n  },\n\n  get liveQueryServerURL() {\n    return _CoreManager.default.get('LIVEQUERY_SERVER_URL');\n  },\n\n  /**\n   * @member {string} Parse.encryptedUser\n   * @static\n   */\n  set encryptedUser(value) {\n    _CoreManager.default.set('ENCRYPTED_USER', value);\n  },\n\n  get encryptedUser() {\n    return _CoreManager.default.get('ENCRYPTED_USER');\n  },\n\n  /**\n   * @member {string} Parse.secret\n   * @static\n   */\n  set secret(value) {\n    _CoreManager.default.set('ENCRYPTED_KEY', value);\n  },\n\n  get secret() {\n    return _CoreManager.default.get('ENCRYPTED_KEY');\n  },\n\n  /**\n   * @member {boolean} Parse.idempotency\n   * @static\n   */\n  set idempotency(value) {\n    _CoreManager.default.set('IDEMPOTENCY', value);\n  },\n\n  get idempotency() {\n    return _CoreManager.default.get('IDEMPOTENCY');\n  },\n\n  /**\n   * @member {boolean} Parse.allowCustomObjectId\n   * @static\n   */\n  set allowCustomObjectId(value) {\n    _CoreManager.default.set('ALLOW_CUSTOM_OBJECT_ID', value);\n  },\n\n  get allowCustomObjectId() {\n    return _CoreManager.default.get('ALLOW_CUSTOM_OBJECT_ID');\n  }\n\n};\nParse.ACL = require('./ParseACL').default;\nParse.Analytics = require('./Analytics');\nParse.AnonymousUtils = require('./AnonymousUtils').default;\nParse.Cloud = require('./Cloud');\nParse.CLP = require('./ParseCLP').default;\nParse.CoreManager = require('./CoreManager');\nParse.Config = require('./ParseConfig').default;\nParse.Error = require('./ParseError').default;\nParse.EventuallyQueue = _EventuallyQueue.default;\nParse.FacebookUtils = require('./FacebookUtils').default;\nParse.File = require('./ParseFile').default;\nParse.GeoPoint = require('./ParseGeoPoint').default;\nParse.Polygon = require('./ParsePolygon').default;\nParse.Installation = require('./ParseInstallation').default;\nParse.LocalDatastore = require('./LocalDatastore');\nParse.Object = require('./ParseObject').default;\nParse.Op = {\n  Set: ParseOp.SetOp,\n  Unset: ParseOp.UnsetOp,\n  Increment: ParseOp.IncrementOp,\n  Add: ParseOp.AddOp,\n  Remove: ParseOp.RemoveOp,\n  AddUnique: ParseOp.AddUniqueOp,\n  Relation: ParseOp.RelationOp\n};\nParse.Push = require('./Push');\nParse.Query = require('./ParseQuery').default;\nParse.Relation = require('./ParseRelation').default;\nParse.Role = require('./ParseRole').default;\nParse.Schema = require('./ParseSchema').default;\nParse.Session = require('./ParseSession').default;\nParse.Storage = require('./Storage');\nParse.User = require('./ParseUser').default;\nParse.LiveQuery = require('./ParseLiveQuery').default;\nParse.LiveQueryClient = require('./LiveQueryClient').default;\nParse.IndexedDB = require('./IndexedDBStorageController');\n\nParse._request = function (...args) {\n  return _CoreManager.default.getRESTController().request.apply(null, args);\n};\n\nParse._ajax = function (...args) {\n  return _CoreManager.default.getRESTController().ajax.apply(null, args);\n}; // We attempt to match the signatures of the legacy versions of these methods\n\n\nParse._decode = function (_, value) {\n  return (0, _decode.default)(value);\n};\n\nParse._encode = function (value, _, disallowObjects) {\n  return (0, _encode.default)(value, disallowObjects);\n};\n\nParse._getInstallationId = function () {\n  return _CoreManager.default.getInstallationController().currentInstallationId();\n};\n/**\n * Enable pinning in your application.\n * This must be called after `Parse.initialize` in your application.\n *\n * @param [polling] Allow pinging the server /health endpoint. Default true\n * @param [ms] Milliseconds to ping the server. Default 2000ms\n * @static\n */\n\n\nParse.enableLocalDatastore = function (polling = true, ms\n/*: number*/\n= 2000) {\n  if (!Parse.applicationId) {\n    console.log(\"'enableLocalDataStore' must be called after 'initialize'\");\n    return;\n  }\n\n  if (!Parse.LocalDatastore.isEnabled) {\n    Parse.LocalDatastore.isEnabled = true;\n\n    if (polling) {\n      _EventuallyQueue.default.poll(ms);\n    }\n  }\n};\n/**\n * Flag that indicates whether Local Datastore is enabled.\n *\n * @static\n * @returns {boolean}\n */\n\n\nParse.isLocalDatastoreEnabled = function () {\n  return Parse.LocalDatastore.isEnabled;\n};\n/**\n * Gets all contents from Local Datastore\n *\n * <pre>\n * await Parse.dumpLocalDatastore();\n * </pre>\n *\n * @static\n * @returns {object}\n */\n\n\nParse.dumpLocalDatastore = function () {\n  if (!Parse.LocalDatastore.isEnabled) {\n    console.log('Parse.enableLocalDatastore() must be called first'); // eslint-disable-line no-console\n\n    return Promise.resolve({});\n  } else {\n    return Parse.LocalDatastore._getAllContents();\n  }\n};\n/**\n * Enable the current user encryption.\n * This must be called before login any user.\n *\n * @static\n */\n\n\nParse.enableEncryptedUser = function () {\n  Parse.encryptedUser = true;\n};\n/**\n * Flag that indicates whether Encrypted User is enabled.\n *\n * @static\n * @returns {boolean}\n */\n\n\nParse.isEncryptedUserEnabled = function () {\n  return Parse.encryptedUser;\n};\n\n_CoreManager.default.setCryptoController(_CryptoController.default);\n\n_CoreManager.default.setInstallationController(_InstallationController.default);\n\n_CoreManager.default.setRESTController(_RESTController.default);\n\nParse.initialize = Parse._initialize;\nParse.Cloud = Parse.Cloud || {};\n\nParse.Cloud.useMasterKey = function () {\n  _CoreManager.default.set('USE_MASTER_KEY', true);\n};\n\nParse.Hooks = require('./ParseHooks'); // For legacy requires, of the form `var Parse = require('parse').Parse`\n\nParse.Parse = Parse;\nmodule.exports = Parse;"]},"metadata":{},"sourceType":"script"}