{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = equals;\n\nvar _ParseACL = _interopRequireDefault(require(\"./ParseACL\"));\n\nvar _ParseFile = _interopRequireDefault(require(\"./ParseFile\"));\n\nvar _ParseGeoPoint = _interopRequireDefault(require(\"./ParseGeoPoint\"));\n\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n\nfunction equals(a, b) {\n  const toString = Object.prototype.toString;\n\n  if (toString.call(a) === '[object Date]' || toString.call(b) === '[object Date]') {\n    const dateA = new Date(a);\n    const dateB = new Date(b);\n    return +dateA === +dateB;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (!a || typeof a !== 'object') {\n    // a is a primitive\n    return a === b;\n  }\n\n  if (Array.isArray(a) || Array.isArray(b)) {\n    if (!Array.isArray(a) || !Array.isArray(b)) {\n      return false;\n    }\n\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    for (let i = a.length; i--;) {\n      if (!equals(a[i], b[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  if (a instanceof _ParseACL.default || a instanceof _ParseFile.default || a instanceof _ParseGeoPoint.default || a instanceof _ParseObject.default) {\n    return a.equals(b);\n  }\n\n  if (b instanceof _ParseObject.default) {\n    if (a.__type === 'Object' || a.__type === 'Pointer') {\n      return a.objectId === b.id && a.className === b.className;\n    }\n  }\n\n  if (Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n\n  for (const k in a) {\n    if (!equals(a[k], b[k])) {\n      return false;\n    }\n  }\n\n  return true;\n}","map":{"version":3,"sources":["/Users/szd/Dev/ycomms-smoketest-landing-page/node_modules/parse/lib/node/equals.js"],"names":["Object","defineProperty","exports","value","default","equals","_ParseACL","_interopRequireDefault","require","_ParseFile","_ParseGeoPoint","_ParseObject","obj","__esModule","a","b","toString","prototype","call","dateA","Date","dateB","Array","isArray","length","i","__type","objectId","id","className","keys","k"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = equals;\n\nvar _ParseACL = _interopRequireDefault(require(\"./ParseACL\"));\n\nvar _ParseFile = _interopRequireDefault(require(\"./ParseFile\"));\n\nvar _ParseGeoPoint = _interopRequireDefault(require(\"./ParseGeoPoint\"));\n\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n\nfunction equals(a, b) {\n  const toString = Object.prototype.toString;\n\n  if (toString.call(a) === '[object Date]' || toString.call(b) === '[object Date]') {\n    const dateA = new Date(a);\n    const dateB = new Date(b);\n    return +dateA === +dateB;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (!a || typeof a !== 'object') {\n    // a is a primitive\n    return a === b;\n  }\n\n  if (Array.isArray(a) || Array.isArray(b)) {\n    if (!Array.isArray(a) || !Array.isArray(b)) {\n      return false;\n    }\n\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    for (let i = a.length; i--;) {\n      if (!equals(a[i], b[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  if (a instanceof _ParseACL.default || a instanceof _ParseFile.default || a instanceof _ParseGeoPoint.default || a instanceof _ParseObject.default) {\n    return a.equals(b);\n  }\n\n  if (b instanceof _ParseObject.default) {\n    if (a.__type === 'Object' || a.__type === 'Pointer') {\n      return a.objectId === b.id && a.className === b.className;\n    }\n  }\n\n  if (Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n\n  for (const k in a) {\n    if (!equals(a[k], b[k])) {\n      return false;\n    }\n  }\n\n  return true;\n}"]},"metadata":{},"sourceType":"script"}