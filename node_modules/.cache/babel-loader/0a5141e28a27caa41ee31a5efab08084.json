{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = canBeSerialized;\n\nvar _ParseFile = _interopRequireDefault(require(\"./ParseFile\"));\n\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\n\nvar _ParseRelation = _interopRequireDefault(require(\"./ParseRelation\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n\nfunction canBeSerialized(obj\n/*: ParseObject*/\n)\n/*: boolean*/\n{\n  if (!(obj instanceof _ParseObject.default)) {\n    return true;\n  }\n\n  const attributes = obj.attributes;\n\n  for (const attr in attributes) {\n    const val = attributes[attr];\n\n    if (!canBeSerializedHelper(val)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction canBeSerializedHelper(value\n/*: any*/\n)\n/*: boolean*/\n{\n  if (typeof value !== 'object') {\n    return true;\n  }\n\n  if (value instanceof _ParseRelation.default) {\n    return true;\n  }\n\n  if (value instanceof _ParseObject.default) {\n    return !!value.id;\n  }\n\n  if (value instanceof _ParseFile.default) {\n    if (value.url()) {\n      return true;\n    }\n\n    return false;\n  }\n\n  if (Array.isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      if (!canBeSerializedHelper(value[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  for (const k in value) {\n    if (!canBeSerializedHelper(value[k])) {\n      return false;\n    }\n  }\n\n  return true;\n}","map":{"version":3,"sources":["/Users/szd/Dev/ycomms-smoketest-landing-page/node_modules/parse/lib/node/canBeSerialized.js"],"names":["Object","defineProperty","exports","value","default","canBeSerialized","_ParseFile","_interopRequireDefault","require","_ParseObject","_ParseRelation","obj","__esModule","attributes","attr","val","canBeSerializedHelper","id","url","Array","isArray","i","length","k"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,eAAlB;;AAEA,IAAIC,UAAU,GAAGC,sBAAsB,CAACC,OAAO,CAAC,aAAD,CAAR,CAAvC;;AAEA,IAAIC,YAAY,GAAGF,sBAAsB,CAACC,OAAO,CAAC,eAAD,CAAR,CAAzC;;AAEA,IAAIE,cAAc,GAAGH,sBAAsB,CAACC,OAAO,CAAC,iBAAD,CAAR,CAA3C;;AAEA,SAASD,sBAAT,CAAgCI,GAAhC,EAAqC;AACnC,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AACnCP,IAAAA,OAAO,EAAEO;AAD0B,GAArC;AAGD;AACD;;;;;;;;;;;;AAYA,SAASN,eAAT,CAAyBM;AACzB;AADA;AAGA;AACA;AACE,MAAI,EAAEA,GAAG,YAAYF,YAAY,CAACL,OAA9B,CAAJ,EAA4C;AAC1C,WAAO,IAAP;AACD;;AAED,QAAMS,UAAU,GAAGF,GAAG,CAACE,UAAvB;;AAEA,OAAK,MAAMC,IAAX,IAAmBD,UAAnB,EAA+B;AAC7B,UAAME,GAAG,GAAGF,UAAU,CAACC,IAAD,CAAtB;;AAEA,QAAI,CAACE,qBAAqB,CAACD,GAAD,CAA1B,EAAiC;AAC/B,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD;;AAED,SAASC,qBAAT,CAA+Bb;AAC/B;AADA;AAGA;AACA;AACE,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAO,IAAP;AACD;;AAED,MAAIA,KAAK,YAAYO,cAAc,CAACN,OAApC,EAA6C;AAC3C,WAAO,IAAP;AACD;;AAED,MAAID,KAAK,YAAYM,YAAY,CAACL,OAAlC,EAA2C;AACzC,WAAO,CAAC,CAACD,KAAK,CAACc,EAAf;AACD;;AAED,MAAId,KAAK,YAAYG,UAAU,CAACF,OAAhC,EAAyC;AACvC,QAAID,KAAK,CAACe,GAAN,EAAJ,EAAiB;AACf,aAAO,IAAP;AACD;;AAED,WAAO,KAAP;AACD;;AAED,MAAIC,KAAK,CAACC,OAAN,CAAcjB,KAAd,CAAJ,EAA0B;AACxB,SAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlB,KAAK,CAACmB,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAI,CAACL,qBAAqB,CAACb,KAAK,CAACkB,CAAD,CAAN,CAA1B,EAAsC;AACpC,eAAO,KAAP;AACD;AACF;;AAED,WAAO,IAAP;AACD;;AAED,OAAK,MAAME,CAAX,IAAgBpB,KAAhB,EAAuB;AACrB,QAAI,CAACa,qBAAqB,CAACb,KAAK,CAACoB,CAAD,CAAN,CAA1B,EAAsC;AACpC,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = canBeSerialized;\n\nvar _ParseFile = _interopRequireDefault(require(\"./ParseFile\"));\n\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\n\nvar _ParseRelation = _interopRequireDefault(require(\"./ParseRelation\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n\nfunction canBeSerialized(obj\n/*: ParseObject*/\n)\n/*: boolean*/\n{\n  if (!(obj instanceof _ParseObject.default)) {\n    return true;\n  }\n\n  const attributes = obj.attributes;\n\n  for (const attr in attributes) {\n    const val = attributes[attr];\n\n    if (!canBeSerializedHelper(val)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction canBeSerializedHelper(value\n/*: any*/\n)\n/*: boolean*/\n{\n  if (typeof value !== 'object') {\n    return true;\n  }\n\n  if (value instanceof _ParseRelation.default) {\n    return true;\n  }\n\n  if (value instanceof _ParseObject.default) {\n    return !!value.id;\n  }\n\n  if (value instanceof _ParseFile.default) {\n    if (value.url()) {\n      return true;\n    }\n\n    return false;\n  }\n\n  if (Array.isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      if (!canBeSerializedHelper(value[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  for (const k in value) {\n    if (!canBeSerializedHelper(value[k])) {\n      return false;\n    }\n  }\n\n  return true;\n}"]},"metadata":{},"sourceType":"script"}