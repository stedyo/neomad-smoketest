{"ast":null,"code":"import safariFix from 'safari-14-idb-fix';\n\nfunction promisifyRequest(request) {\n  return new Promise(function (resolve, reject) {\n    // @ts-ignore - file size hacks\n    request.oncomplete = request.onsuccess = function () {\n      return resolve(request.result);\n    }; // @ts-ignore - file size hacks\n\n\n    request.onabort = request.onerror = function () {\n      return reject(request.error);\n    };\n  });\n}\n\nfunction createStore(dbName, storeName) {\n  var dbp = safariFix().then(function () {\n    var request = indexedDB.open(dbName);\n\n    request.onupgradeneeded = function () {\n      return request.result.createObjectStore(storeName);\n    };\n\n    return promisifyRequest(request);\n  });\n  return function (txMode, callback) {\n    return dbp.then(function (db) {\n      return callback(db.transaction(storeName, txMode).objectStore(storeName));\n    });\n  };\n}\n\nvar defaultGetStoreFunc;\n\nfunction defaultGetStore() {\n  if (!defaultGetStoreFunc) {\n    defaultGetStoreFunc = createStore('keyval-store', 'keyval');\n  }\n\n  return defaultGetStoreFunc;\n}\n/**\n * Get a value by its key.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction get(key) {\n  var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();\n  return customStore('readonly', function (store) {\n    return promisifyRequest(store.get(key));\n  });\n}\n/**\n * Set a value with a key.\n *\n * @param key\n * @param value\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction set(key, value) {\n  var customStore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGetStore();\n  return customStore('readwrite', function (store) {\n    store.put(value, key);\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Set multiple values at once. This is faster than calling set() multiple times.\n * It's also atomic â€“ if one of the pairs can't be added, none will be added.\n *\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction setMany(entries) {\n  var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();\n  return customStore('readwrite', function (store) {\n    entries.forEach(function (entry) {\n      return store.put(entry[1], entry[0]);\n    });\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Get multiple values by their keys\n *\n * @param keys\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction getMany(keys) {\n  var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();\n  return customStore('readonly', function (store) {\n    return Promise.all(keys.map(function (key) {\n      return promisifyRequest(store.get(key));\n    }));\n  });\n}\n/**\n * Update a value. This lets you see the old value and update it as an atomic operation.\n *\n * @param key\n * @param updater A callback that takes the old value and returns a new value.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction update(key, updater) {\n  var customStore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGetStore();\n  return customStore('readwrite', function (store) {\n    return (// Need to create the promise manually.\n      // If I try to chain promises, the transaction closes in browsers\n      // that use a promise polyfill (IE10/11).\n      new Promise(function (resolve, reject) {\n        store.get(key).onsuccess = function () {\n          try {\n            store.put(updater(this.result), key);\n            resolve(promisifyRequest(store.transaction));\n          } catch (err) {\n            reject(err);\n          }\n        };\n      })\n    );\n  });\n}\n/**\n * Delete a particular key from the store.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction del(key) {\n  var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();\n  return customStore('readwrite', function (store) {\n    store.delete(key);\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Delete multiple keys at once.\n *\n * @param keys List of keys to delete.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction delMany(keys) {\n  var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();\n  return customStore('readwrite', function (store) {\n    keys.forEach(function (key) {\n      return store.delete(key);\n    });\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Clear all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction clear() {\n  var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGetStore();\n  return customStore('readwrite', function (store) {\n    store.clear();\n    return promisifyRequest(store.transaction);\n  });\n}\n\nfunction eachCursor(customStore, callback) {\n  return customStore('readonly', function (store) {\n    // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n    // And openKeyCursor isn't supported by Safari.\n    store.openCursor().onsuccess = function () {\n      if (!this.result) return;\n      callback(this.result);\n      this.result.continue();\n    };\n\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Get all keys in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction keys() {\n  var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGetStore();\n  var items = [];\n  return eachCursor(customStore, function (cursor) {\n    return items.push(cursor.key);\n  }).then(function () {\n    return items;\n  });\n}\n/**\n * Get all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction values() {\n  var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGetStore();\n  var items = [];\n  return eachCursor(customStore, function (cursor) {\n    return items.push(cursor.value);\n  }).then(function () {\n    return items;\n  });\n}\n/**\n * Get all entries in the store. Each entry is an array of `[key, value]`.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction entries() {\n  var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGetStore();\n  var items = [];\n  return eachCursor(customStore, function (cursor) {\n    return items.push([cursor.key, cursor.value]);\n  }).then(function () {\n    return items;\n  });\n}\n\nexport { clear, createStore, del, delMany, entries, get, getMany, keys, promisifyRequest, set, setMany, update, values };","map":{"version":3,"sources":["/Users/szd/Dev/ycomms-smoketest-landing-page/node_modules/idb-keyval/dist/compat.js"],"names":["safariFix","promisifyRequest","request","Promise","resolve","reject","oncomplete","onsuccess","result","onabort","onerror","error","createStore","dbName","storeName","dbp","then","indexedDB","open","onupgradeneeded","createObjectStore","txMode","callback","db","transaction","objectStore","defaultGetStoreFunc","defaultGetStore","get","key","customStore","arguments","length","undefined","store","set","value","put","setMany","entries","forEach","entry","getMany","keys","all","map","update","updater","err","del","delete","delMany","clear","eachCursor","openCursor","continue","items","cursor","push","values"],"mappings":"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","sourcesContent":["import safariFix from 'safari-14-idb-fix';\n\nfunction promisifyRequest(request) {\n  return new Promise(function (resolve, reject) {\n    // @ts-ignore - file size hacks\n    request.oncomplete = request.onsuccess = function () {\n      return resolve(request.result);\n    }; // @ts-ignore - file size hacks\n\n\n    request.onabort = request.onerror = function () {\n      return reject(request.error);\n    };\n  });\n}\n\nfunction createStore(dbName, storeName) {\n  var dbp = safariFix().then(function () {\n    var request = indexedDB.open(dbName);\n\n    request.onupgradeneeded = function () {\n      return request.result.createObjectStore(storeName);\n    };\n\n    return promisifyRequest(request);\n  });\n  return function (txMode, callback) {\n    return dbp.then(function (db) {\n      return callback(db.transaction(storeName, txMode).objectStore(storeName));\n    });\n  };\n}\n\nvar defaultGetStoreFunc;\n\nfunction defaultGetStore() {\n  if (!defaultGetStoreFunc) {\n    defaultGetStoreFunc = createStore('keyval-store', 'keyval');\n  }\n\n  return defaultGetStoreFunc;\n}\n/**\n * Get a value by its key.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction get(key) {\n  var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();\n  return customStore('readonly', function (store) {\n    return promisifyRequest(store.get(key));\n  });\n}\n/**\n * Set a value with a key.\n *\n * @param key\n * @param value\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction set(key, value) {\n  var customStore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGetStore();\n  return customStore('readwrite', function (store) {\n    store.put(value, key);\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Set multiple values at once. This is faster than calling set() multiple times.\n * It's also atomic â€“ if one of the pairs can't be added, none will be added.\n *\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction setMany(entries) {\n  var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();\n  return customStore('readwrite', function (store) {\n    entries.forEach(function (entry) {\n      return store.put(entry[1], entry[0]);\n    });\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Get multiple values by their keys\n *\n * @param keys\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction getMany(keys) {\n  var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();\n  return customStore('readonly', function (store) {\n    return Promise.all(keys.map(function (key) {\n      return promisifyRequest(store.get(key));\n    }));\n  });\n}\n/**\n * Update a value. This lets you see the old value and update it as an atomic operation.\n *\n * @param key\n * @param updater A callback that takes the old value and returns a new value.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction update(key, updater) {\n  var customStore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGetStore();\n  return customStore('readwrite', function (store) {\n    return (// Need to create the promise manually.\n      // If I try to chain promises, the transaction closes in browsers\n      // that use a promise polyfill (IE10/11).\n      new Promise(function (resolve, reject) {\n        store.get(key).onsuccess = function () {\n          try {\n            store.put(updater(this.result), key);\n            resolve(promisifyRequest(store.transaction));\n          } catch (err) {\n            reject(err);\n          }\n        };\n      })\n    );\n  });\n}\n/**\n * Delete a particular key from the store.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction del(key) {\n  var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();\n  return customStore('readwrite', function (store) {\n    store.delete(key);\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Delete multiple keys at once.\n *\n * @param keys List of keys to delete.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction delMany(keys) {\n  var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();\n  return customStore('readwrite', function (store) {\n    keys.forEach(function (key) {\n      return store.delete(key);\n    });\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Clear all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction clear() {\n  var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGetStore();\n  return customStore('readwrite', function (store) {\n    store.clear();\n    return promisifyRequest(store.transaction);\n  });\n}\n\nfunction eachCursor(customStore, callback) {\n  return customStore('readonly', function (store) {\n    // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n    // And openKeyCursor isn't supported by Safari.\n    store.openCursor().onsuccess = function () {\n      if (!this.result) return;\n      callback(this.result);\n      this.result.continue();\n    };\n\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Get all keys in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction keys() {\n  var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGetStore();\n  var items = [];\n  return eachCursor(customStore, function (cursor) {\n    return items.push(cursor.key);\n  }).then(function () {\n    return items;\n  });\n}\n/**\n * Get all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction values() {\n  var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGetStore();\n  var items = [];\n  return eachCursor(customStore, function (cursor) {\n    return items.push(cursor.value);\n  }).then(function () {\n    return items;\n  });\n}\n/**\n * Get all entries in the store. Each entry is an array of `[key, value]`.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction entries() {\n  var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGetStore();\n  var items = [];\n  return eachCursor(customStore, function (cursor) {\n    return items.push([cursor.key, cursor.value]);\n  }).then(function () {\n    return items;\n  });\n}\n\nexport { clear, createStore, del, delMany, entries, get, getMany, keys, promisifyRequest, set, setMany, update, values };\n"]},"metadata":{},"sourceType":"module"}