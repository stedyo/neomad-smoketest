{"ast":null,"code":"\"use strict\";\n\nvar _LocalDatastoreUtils = require(\"./LocalDatastoreUtils\");\n\nvar _Storage = _interopRequireDefault(require(\"./Storage\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n\nconst LocalDatastoreController = {\n  async fromPinWithName(name\n  /*: string*/\n  )\n  /*: Array<Object>*/\n  {\n    const values = await _Storage.default.getItemAsync(name);\n\n    if (!values) {\n      return [];\n    }\n\n    const objects = JSON.parse(values);\n    return objects;\n  },\n\n  pinWithName(name\n  /*: string*/\n  , value\n  /*: any*/\n  ) {\n    const values = JSON.stringify(value);\n    return _Storage.default.setItemAsync(name, values);\n  },\n\n  unPinWithName(name\n  /*: string*/\n  ) {\n    return _Storage.default.removeItemAsync(name);\n  },\n\n  async getAllContents()\n  /*: Object*/\n  {\n    const keys = await _Storage.default.getAllKeysAsync();\n    return keys.reduce(async (previousPromise, key) => {\n      const LDS = await previousPromise;\n\n      if ((0, _LocalDatastoreUtils.isLocalDatastoreKey)(key)) {\n        const value = await _Storage.default.getItemAsync(key);\n\n        try {\n          LDS[key] = JSON.parse(value);\n        } catch (error) {\n          console.error('Error getAllContents: ', error);\n        }\n      }\n\n      return LDS;\n    }, Promise.resolve({}));\n  },\n\n  // Used for testing\n  async getRawStorage()\n  /*: Object*/\n  {\n    const keys = await _Storage.default.getAllKeysAsync();\n    return keys.reduce(async (previousPromise, key) => {\n      const LDS = await previousPromise;\n      const value = await _Storage.default.getItemAsync(key);\n      LDS[key] = value;\n      return LDS;\n    }, Promise.resolve({}));\n  },\n\n  async clear()\n  /*: Promise*/\n  {\n    const keys = await _Storage.default.getAllKeysAsync();\n    const toRemove = [];\n\n    for (const key of keys) {\n      if ((0, _LocalDatastoreUtils.isLocalDatastoreKey)(key)) {\n        toRemove.push(key);\n      }\n    }\n\n    const promises = toRemove.map(this.unPinWithName);\n    return Promise.all(promises);\n  }\n\n};\nmodule.exports = LocalDatastoreController;","map":{"version":3,"sources":["/Users/szd/Dev/ycomms-smoketest-landing-page/node_modules/parse/lib/node/LocalDatastoreController.js"],"names":["_LocalDatastoreUtils","require","_Storage","_interopRequireDefault","obj","__esModule","default","LocalDatastoreController","fromPinWithName","name","values","getItemAsync","objects","JSON","parse","pinWithName","value","stringify","setItemAsync","unPinWithName","removeItemAsync","getAllContents","keys","getAllKeysAsync","reduce","previousPromise","key","LDS","isLocalDatastoreKey","error","console","Promise","resolve","getRawStorage","clear","toRemove","push","promises","map","all","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _LocalDatastoreUtils = require(\"./LocalDatastoreUtils\");\n\nvar _Storage = _interopRequireDefault(require(\"./Storage\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n\nconst LocalDatastoreController = {\n  async fromPinWithName(name\n  /*: string*/\n  )\n  /*: Array<Object>*/\n  {\n    const values = await _Storage.default.getItemAsync(name);\n\n    if (!values) {\n      return [];\n    }\n\n    const objects = JSON.parse(values);\n    return objects;\n  },\n\n  pinWithName(name\n  /*: string*/\n  , value\n  /*: any*/\n  ) {\n    const values = JSON.stringify(value);\n    return _Storage.default.setItemAsync(name, values);\n  },\n\n  unPinWithName(name\n  /*: string*/\n  ) {\n    return _Storage.default.removeItemAsync(name);\n  },\n\n  async getAllContents()\n  /*: Object*/\n  {\n    const keys = await _Storage.default.getAllKeysAsync();\n    return keys.reduce(async (previousPromise, key) => {\n      const LDS = await previousPromise;\n\n      if ((0, _LocalDatastoreUtils.isLocalDatastoreKey)(key)) {\n        const value = await _Storage.default.getItemAsync(key);\n\n        try {\n          LDS[key] = JSON.parse(value);\n        } catch (error) {\n          console.error('Error getAllContents: ', error);\n        }\n      }\n\n      return LDS;\n    }, Promise.resolve({}));\n  },\n\n  // Used for testing\n  async getRawStorage()\n  /*: Object*/\n  {\n    const keys = await _Storage.default.getAllKeysAsync();\n    return keys.reduce(async (previousPromise, key) => {\n      const LDS = await previousPromise;\n      const value = await _Storage.default.getItemAsync(key);\n      LDS[key] = value;\n      return LDS;\n    }, Promise.resolve({}));\n  },\n\n  async clear()\n  /*: Promise*/\n  {\n    const keys = await _Storage.default.getAllKeysAsync();\n    const toRemove = [];\n\n    for (const key of keys) {\n      if ((0, _LocalDatastoreUtils.isLocalDatastoreKey)(key)) {\n        toRemove.push(key);\n      }\n    }\n\n    const promises = toRemove.map(this.unPinWithName);\n    return Promise.all(promises);\n  }\n\n};\nmodule.exports = LocalDatastoreController;"]},"metadata":{},"sourceType":"script"}