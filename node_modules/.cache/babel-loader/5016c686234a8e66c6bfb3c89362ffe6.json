{"ast":null,"code":"\"use strict\";\n\nlet AES;\nlet ENC;\nAES = require('crypto-js/aes');\nENC = require('crypto-js/enc-utf8');\nconst CryptoController = {\n  encrypt(obj\n  /*: any*/\n  , secretKey\n  /*: string*/\n  )\n  /*: ?string*/\n  {\n    const encrypted = AES.encrypt(JSON.stringify(obj), secretKey);\n    return encrypted.toString();\n  },\n\n  decrypt(encryptedText\n  /*: string*/\n  , secretKey\n  /*: string*/\n  )\n  /*: ?string*/\n  {\n    const decryptedStr = AES.decrypt(encryptedText, secretKey).toString(ENC);\n    return decryptedStr;\n  }\n\n};\nmodule.exports = CryptoController;","map":{"version":3,"sources":["/Users/szd/Dev/ycomms-smoketest-landing-page/node_modules/parse/lib/node/CryptoController.js"],"names":["AES","ENC","require","CryptoController","encrypt","obj","secretKey","encrypted","JSON","stringify","toString","decrypt","encryptedText","decryptedStr","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,GAAJ;AACA,IAAIC,GAAJ;AACAD,GAAG,GAAGE,OAAO,CAAC,eAAD,CAAb;AACAD,GAAG,GAAGC,OAAO,CAAC,oBAAD,CAAb;AACA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,OAAO,CAACC;AACR;AADO,IAELC;AACF;AAHO;AAKP;AACA;AACE,UAAMC,SAAS,GAAGP,GAAG,CAACI,OAAJ,CAAYI,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAAZ,EAAiCC,SAAjC,CAAlB;AACA,WAAOC,SAAS,CAACG,QAAV,EAAP;AACD,GAVsB;;AAYvBC,EAAAA,OAAO,CAACC;AACR;AADO,IAELN;AACF;AAHO;AAKP;AACA;AACE,UAAMO,YAAY,GAAGb,GAAG,CAACW,OAAJ,CAAYC,aAAZ,EAA2BN,SAA3B,EAAsCI,QAAtC,CAA+CT,GAA/C,CAArB;AACA,WAAOY,YAAP;AACD;;AArBsB,CAAzB;AAwBAC,MAAM,CAACC,OAAP,GAAiBZ,gBAAjB","sourcesContent":["\"use strict\";\n\nlet AES;\nlet ENC;\nAES = require('crypto-js/aes');\nENC = require('crypto-js/enc-utf8');\nconst CryptoController = {\n  encrypt(obj\n  /*: any*/\n  , secretKey\n  /*: string*/\n  )\n  /*: ?string*/\n  {\n    const encrypted = AES.encrypt(JSON.stringify(obj), secretKey);\n    return encrypted.toString();\n  },\n\n  decrypt(encryptedText\n  /*: string*/\n  , secretKey\n  /*: string*/\n  )\n  /*: ?string*/\n  {\n    const decryptedStr = AES.decrypt(encryptedText, secretKey).toString(ENC);\n    return decryptedStr;\n  }\n\n};\nmodule.exports = CryptoController;"]},"metadata":{},"sourceType":"script"}